{\rtf1\ansi\ansicpg1252\cocoartf1504
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red53\green53\blue53;\red0\green0\blue255;
\red255\green0\blue0;}
{\*\expandedcolortbl;\csgray\c100000;\csgenericrgb\c0\c0\c0;\cssrgb\c27059\c27059\c27059;\csgenericrgb\c0\c0\c100000;
\csgenericrgb\c100000\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww19600\viewh14040\viewkind0
\deftab560
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f0\fs40 \cf2 If you already edited homebridge-http/index.js
\fs80 \

\fs24 Just open index.js and copy/paste these 3 red snippets of code at 3 specific places discussed below:\

\fs40 \cf3 \
1. In HttpAccessory just below \cf4 function HttpAccessory(log, config)\{
\fs24 \cf3 \

\fs12 \cf5 \
		//  %% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		//    %% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		//  %% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		// JavaHAP properties:   %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		this.saveLocation = '/usr/local/lib/node_modules/homebridge-http/Extended/';\
		this.amqp = require('amqplib/callback_api');\
		this.config = config;\
		//  END JavaHap properties %% | %% | %% | %%  %% | %% | %% | %% | %% |  \
		//  %% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		//    %% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		//  %% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
\
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs40 \cf3 2. In Prototype just below \cf4 HttpAccessory.prototype = \{
\fs24 \cf3 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\fs12 \cf5 \
\
	// %% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
	//   %% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
	// %% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
	// JavaHAP METHODS: %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
  	setupValues: function(callback) \{\
		switch (this.service)\{\
			case "Thermostat":\
				this.writeValue('targetHeatingCoolingState', 0);\
				this.writeValue('targetTemperature', 23);\
				this.writeValue('currentTemperature', 23);\
				this.writeValue('temperatureDisplayUnits', 0);\
				break;\
			case "Switch":\
				this.writeValue('powerState', 0);\
				break;\
			case "Light":\
				this.writeValue('powerState', 0);\
				this.writeValue('brightness', 100);\
				break;\
		\}\
  	\},\
\
  	executeCommand: function(command)\{\
  		var exec = require('child_process').exec;\
		exec(command, function(error, stdout, stderr)\{\} );\
  	\},\
\
\
\
  	rabbitSend: function(message)\{\
		this.amqp.connect('amqp://localhost', function(err, conn) \{\
		  	conn.createChannel(function(err, ch) \{\
		  		var q = 'hap';\
		  		var msg = message;\
\
 		   		ch.assertQueue(q, \{durable: false\});\
		    	// Note: on Node 6 Buffer.from(msg) should be used\
		    	ch.sendToQueue(q, new Buffer(msg));\
		    	console.log(" [x] Sent %s", msg);\
		  	\});\
		  	setTimeout(function() \{ conn.close(); \}, 200);\
		\});\
	\},\
	\
\
  	writeValue: function(valueName, value)\{\
\
  		var sentence = ""+value;\
		var fs = require('fs');\
		fs.writeFile( this.saveLocation  + this.name + '_'+valueName+'.txt', sentence, function(err) \{\
    		if(err) \{\
        		return console.log(err);\
    		\}\
		\}); \
\
		return;\
\
  	\},\
\
  	readValue: function(valueName, type, callback)\{\
  		 fs = require('fs')\
  		 var that = this;\
  		fs.readFile( this.saveLocation  + this.name + '_'+valueName+'.txt', 'utf8', function (err,data) \{\
			if (err) \{\
				that.setupValues();\
				callback(null, 0);\
  			\}\
  			else \{\
  				console.log("Getting "+valueName+": %s", data);\
  				switch (type)\{\
  					case "int":\
  					callback(null, parseInt(data));\
  					break;\
  					case "float":\
  					callback(null, parseFloat(data));\
  					case "string":\
  					callback(null, data);\
  					break;\
  				\}\
  				\
  			\}\
		\});\
  	\},\
\
  	update(method, value, callback)\{\
  		var url = this.config[method+"_url"];\
  		if (url == "java") this.rabbitSend('update '+this.name+' '+method+' '+value);\
		else this.executeCommand(url);		\
		this.writeValue(method, value);\
		callback();\
  	\},\
\
\
	fakeFunction: function()\{\
\
	\},\
\
\
\
	getJavaPowerState: function(callback) \{\
    	this.readValue('powerState', 'int', callback);\
	\},\
\
	setJavaPowerState: function(powerOn, callback) \{\
		this.update("powerState", powerOn ? 1 : 0, callback);\
	\},\
\
\
\
	getJavaBrightness: function(callback) \{\
		this.readValue('Brightness', 'int', callback);\
	\},\
\
	setJavaBrightness: function(value, callback) \{ \
		this.update("brightness", value, callback);\
	\},\
\
\
\
  	getJavaTargetHeatingCoolingState: function(callback) \{\
  		this.readValue('targetHeatingCoolingState', 'int', callback);\
	\},\
\
	setJavaTargetHeatingCoolingState: function(value, callback) \{\
		this.update("targetHeatingCoolingState", value, callback);\
	\},\
\
\
\
	getJavaCurrentTemperature: function(callback) \{\
		this.readValue('currentTemperature', 'int', callback);\
	\},\
\
\
	setJavaCurrentTemperature: function(value, callback) \{\
		this.update("currentTemperature", value, callback);\
  	\},\
\
\
\
	getJavaTargetTemperature: function(callback) \{\
		this.readValue('currentTemperature', 'int', callback);\
	\},\
\
	setJavaTargetTemperature: function(value, callback) \{\
		this.update("targetTemperature", value, callback);\
	\},\
\
\
\
	getJavaTemperatureDisplayUnits: function(callback) \{\
		this.readValue('temperatureDisplayUnits', 'int', callback);\
	\},\
\
\
	setJavaTemperatureDisplayUnits: function(value, callback) \{\
		this.update("temperatureDisplayUnits", value, callback);\
	\},\
	// END JAVAHAP METHODS | %% | %% | %% | %% | %% | %% | %% | %% | %% | %% |\
	//  %% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
	//    %% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
	//  %% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
\

\fs40 \cf3 3. In getServices below \cf4 HttpAccessory.prototype = \{
\fs20 \cf3 \

\fs12 \cf5 \
		//%% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		//%%   | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		//%% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		// JavaHAP ACCESSORIES: %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		case "JavaSwitch": \
			this.switchService = new Service.Switch(this.name);\
			this.switchService\
					.getCharacteristic(Characteristic.On)\
					.on('get', this.getJavaPowerState.bind(this))\
					.on('set', this.setJavaPowerState.bind(this));	\
			that.getJavaPowerState(this.fakeFunction);\
			return [informationService, this.switchService];\
			break;\
\
		case "JavaLight":	\
			this.lightbulbService = new Service.Lightbulb(this.name);			\
			this.lightbulbService\
				.getCharacteristic(Characteristic.On)\
				.on('get', this.getJavaPowerState.bind(this))\
				.on('set', this.setJavaPowerState.bind(this));\
			this.lightbulbService\
				.addCharacteristic(new Characteristic.Brightness())\
				.on('get', this.getJavaBrightness.bind(this))\
				.on('set', this.setJavaBrightness.bind(this));		\
			that.getJavaBrightness(this.fakeFunction);\
			return [informationService, this.lightbulbService];\
			break;\
\
		case "JavaThermostat":	\
			this.thermostatService = new Service.Thermostat(this.name);			\
			this.thermostatService\
				.getCharacteristic(Characteristic.TargetHeatingCoolingState)\
				.on('get', this.getJavaTargetHeatingCoolingState.bind(this))\
				.on('set', this.setJavaTargetHeatingCoolingState.bind(this));\
				this.thermostatService\
				.getCharacteristic(Characteristic.CurrentTemperature)\
				.on('get', this.getJavaCurrentTemperature.bind(this))\
				.on('set', this.setJavaCurrentTemperature.bind(this));\
				this.thermostatService\
				.getCharacteristic(Characteristic.TargetTemperature)\
				.on('get', this.getJavaTargetTemperature.bind(this))\
				.on('set', this.setJavaTargetTemperature.bind(this));\
				this.thermostatService\
				.getCharacteristic(Characteristic.TemperatureDisplayUnits)\
				.on('get', this.getJavaTemperatureDisplayUnits.bind(this))\
				.on('set', this.setJavaTemperatureDisplayUnits.bind(this));\
	\
			that.getJavaTargetTemperature(this.fakeFunction);\
			return [informationService, this.thermostatService];\
			break;	\
		// END JavaHAP ACCESSORIES %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		//%% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		//%% |   %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
		//%% | %% | %% | %%  %% | %% | %% | %% | %% | %% | %% | %% | %% | %% | \
\

\fs40 \cf3 Now save index.js and close it.
\fs20 \
\cf5 \
}
